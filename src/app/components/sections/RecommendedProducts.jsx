'use client'

import Link from 'next/link'
import Button from '../ui/Button'
import Rating from '../ui/Rating'
import { useCart } from '../../context/CartContext'

const RecommendedProducts = () => {
    const { addToCart } = useCart()

    const products = [
        {
            id: 1,
            name: '–®–æ–∫–æ–ª–∞–¥–Ω—ã–π —Ç–æ—Ä—Ç "–í–µ—á–µ—Ä –≤ –ü–∞—Ä–∏–∂–µ"',
            price: 2400,
            rating: 4.9,
            baker: '–ü–µ–∫–∞—Ä–Ω—è "–£ –ú–∞—Ä–∏–∏"',
            image: '/api/placeholder/200/200'
        },
        {
            id: 2,
            name: '–ú–µ–¥–æ–≤–∏–∫ –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π',
            price: 1800,
            rating: 4.7,
            baker: '–ü–µ–∫–∞—Ä–Ω—è "–£ –ú–∞—Ä–∏–∏"',
            image: '/api/placeholder/200/200'
        },
        {
            id: 3,
            name: '–Ø–±–ª–æ—á–Ω—ã–π –ø–∏—Ä–æ–≥',
            price: 850,
            rating: 4.6,
            baker: '–î–æ–º–∞—à–Ω—è—è –∫—É—Ö–Ω—è "–í–∫—É—Å–Ω–æ"',
            image: '/api/placeholder/200/200'
        },
        {
            id: 4,
            name: '–ß–∏–∑–∫–µ–π–∫ –ù—å—é-–ô–æ—Ä–∫',
            price: 2200,
            rating: 4.8,
            baker: '–ö–æ–Ω–¥–∏—Ç–µ—Ä—Å–∫–∞—è "–°–ª–∞–¥–æ—Å—Ç–∏"',
            image: '/api/placeholder/200/200'
        }
    ]

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫–Ω–æ–ø–∫–∏ "+"
    const handleAddToCart = (e, product) => {
        e.preventDefault()
        e.stopPropagation()
        addToCart(product)
        alert(`–¢–æ–≤–∞—Ä "${product.name}" –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É!`)
    }

    return (
        <section className="py-16 bg-white">
            <div className="container mx-auto px-4">
                <div className="flex items-center justify-between mb-8">
                    <h2 className="text-3xl font-bold text-bakery-1150 font-display">
                        –ù–æ–≤–∏–Ω–∫–∏ –Ω–µ–¥–µ–ª–∏
                    </h2>
                    <Link href="/catalog">
                        <Button variant="outline" size="sm">
                            –í—Å–µ –Ω–æ–≤–∏–Ω–∫–∏
                        </Button>
                    </Link>
                </div>

                <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-6">
                    {products.map((product) => (
                        <div
                            key={product.id}
                            className="bg-bakery-50 rounded-2xl p-4 shadow-bakery-soft hover:shadow-bakery-medium transition-all duration-300 border border-bakery-200 group"
                        >
                            {/* –°—Å—ã–ª–∫–∞ –Ω–∞ –≤–µ—Å—å –∫–ª–∏–∫–∞–±–µ–ª—å–Ω—ã–π –±–ª–æ–∫ */}
                            <Link href={`/product/${product.id}`} className="block">
                                <div className="cursor-pointer mb-3">
                                    {/* –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ */}
                                    <div className="bg-white rounded-xl w-full h-48 mb-4 flex items-center justify-center text-bakery-300 text-4xl group-hover:scale-105 transition-transform duration-300">
                                        üéÇ
                                    </div>

                                    {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–æ–≤–∞—Ä–µ */}
                                    <div>
                                        <h3 className="font-semibold text-bakery-1150 text-lg mb-1 font-body group-hover:text-bakery-500 transition-colors line-clamp-2">
                                            {product.name}
                                        </h3>
                                        <p className="text-bakery-1050 text-sm mb-2 font-body">
                                            {product.baker}
                                        </p>
                                        <Rating rating={product.rating} size="sm" />
                                    </div>
                                </div>
                            </Link>

                            {/* –¶–µ–Ω–∞ –∏ –∫–Ω–æ–ø–∫–∞ (–æ—Ç–¥–µ–ª—å–Ω–æ –æ—Ç —Å—Å—ã–ª–∫–∏) */}
                            <div className="flex items-center justify-between">
                                <span className="text-xl font-bold text-bakery-500">
                                    {product.price}‚ÇΩ
                                </span>
                                <Button
                                    size="sm"
                                    className="!px-3 !py-2"
                                    onClick={(e) => handleAddToCart(e, product)}
                                >
                                    +
                                </Button>
                            </div>
                        </div>
                    ))}
                </div>
            </div>
        </section>
    )
}

export default RecommendedProducts